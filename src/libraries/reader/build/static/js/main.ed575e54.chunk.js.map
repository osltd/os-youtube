{"version":3,"sources":["components/topBar/index.js","components/slider/index.js","components/section/index.js","components/credit/index.js","scenes/reader/index.js","serviceWorker.js","index.js"],"names":["TopBar","props","className","src","this","shop","logo","name","React","Component","Slider","state","dragStart","dragStartTime","Date","index","lastIndex","transition","loop","selected","showArrows","showNav","setState","nextProps","goToSlide","event","isTouch","touches","pageX","x","getDragX","slideWidth","forwardRef","refs","slider","offsetWidth","offset","newIndex","Math","abs","stopPropagation","preventDefault","children","timeElapsed","getTime","velocity","round","length","nav","map","slide","i","buttonClasses","key","onClick","arrowsClasses","slidesStyles","width","transform","slidesClasses","ref","renderArrows","renderNav","onTouchStart","handleDragStart","onTouchMove","handleDragMove","onTouchEnd","handleDragEnd","style","Section","tags","section","childs","media","forEach","m","push","test","ext","url","controls","title","h2p","description","join","Credit","href","target","Reader","article","window","OS_ARTICLE","sections","idx","console","log","id","renderArticle","renderNotFound","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed575e54.chunk.js","sourcesContent":["import React from 'react';\nimport './topBar.css'\n\nexport default class TopBar extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className=\"top-bar\">\n                <div className=\"top-bar-wrapper\">\n                    <img src={this.props.shop.logo} className=\"shop-logo\"/>\n                    <span className=\"shop-name\">{this.props.shop.name}</span>\n                </div>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport './slider.css'\nimport './slider.scss'\n\nexport default class Slider extends React.Component {\n\n    getDefaultProps() {\n        return {\n          loop: false,\n          selected: 0,\n          showArrows: true,\n          showNav: true,\n        };\n    }\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            dragStart: 0,\n            dragStartTime: new Date(),\n            index: 0,\n            lastIndex: 0,\n            transition: false\n        }\n    }\n    \n    componentWillMount() {\n        const { selected } = this.props;\n\n        this.setState({\n            index: selected,\n            lastIndex: selected,\n        });\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        const { selected } = this.props;\n    \n        if (selected !== nextProps.selected) {\n          this.goToSlide(nextProps.selected);\n        }\n    }\n    \n    getDragX(event, isTouch) {\n        return isTouch ?\n          event.touches[0].pageX :\n          event.pageX;\n    }\n    \n    handleDragStart(event, isTouch) {\n        const x = this.getDragX(event, isTouch);\n    \n        this.setState({\n          dragStart: x,\n          dragStartTime: new Date(),\n          transition: false,\n          slideWidth: React.forwardRef(this.refs.slider).offsetWidth,\n        });\n    }\n    \n    handleDragMove(event, isTouch) {\n        const {\n          dragStart,\n          lastIndex,\n          slideWidth,\n        } = this.state;\n    \n        const x = this.getDragX(event, isTouch);\n        const offset = dragStart - x;\n        const percentageOffset = offset / slideWidth;\n        const newIndex = lastIndex + percentageOffset;\n        const SCROLL_OFFSET_TO_STOP_SCROLL = 30;\n    \n        // Stop scrolling if you slide more than 30 pixels\n        if (Math.abs(offset) > SCROLL_OFFSET_TO_STOP_SCROLL) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n    \n        this.setState({\n          index: newIndex,\n        });\n    }\n    \n    handleDragEnd() {\n        const {\n            children,\n        } = this.props;\n        const {\n            dragStartTime,\n            index,\n            lastIndex,\n        } = this.state;\n    \n        const timeElapsed = new Date().getTime() - dragStartTime.getTime();\n        const offset = lastIndex - index;\n        const velocity = Math.round(offset / timeElapsed * 10000);\n    \n        let newIndex = Math.round(index);\n    \n        if (Math.abs(velocity) > 5) {\n            newIndex = velocity < 0 ? lastIndex + 1 : lastIndex - 1;\n        }\n    \n        if (newIndex < 0) {\n            newIndex = 0;\n        } else if (newIndex >= children.length) {\n            newIndex = children.length - 1;\n        }\n    \n        this.setState({\n            dragStart: 0,\n            index: newIndex,\n            lastIndex: newIndex,\n            transition: true,\n        });\n    }\n    \n    goToSlide(index, event) {\n        const {\n            children,\n            loop,\n        } = this.props;\n    \n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    \n        if (index < 0) {\n            index = loop ? children.length - 1 : 0;\n        } else if (index >= children.length) {\n            index = loop ? 0 : children.length - 1;\n        }\n    \n        this.setState({\n            index: index,\n            lastIndex: index,\n            transition: true,\n        });\n    }\n    \n    renderNav() {\n        const { children } = this.props;\n        const { lastIndex } = this.state;\n    \n        const nav = children.map((slide, i) => {\n            const buttonClasses = i === lastIndex ? 'Slider-navButton Slider-navButton--active' : 'Slider-navButton';\n            return (\n                <button\n                    className={ buttonClasses }\n                    key={ i }\n                    onClick={ (event) => this.goToSlide(i, event) } />\n            );\n        })\n    \n        return (\n            <div className='Slider-nav'>{ nav }</div>\n        );\n      }\n    \n    renderArrows() {\n        const {\n            children,\n            loop,\n            showNav,\n        } = this.props;\n        const { lastIndex } = this.state;\n        const arrowsClasses = showNav ? 'Slider-arrows' : 'Slider-arrows Slider-arrows--noNav';\n    \n        return (\n            <div className={ arrowsClasses }>\n                { \n                    loop || lastIndex > 0 ?\n                        <button\n                            className='Slider-arrow Slider-arrow--left'\n                            onClick={ (event) => this.goToSlide(lastIndex - 1, event) } /> : null \n                }\n                { \n                    loop || lastIndex < children.length - 1 ?\n                        <button\n                            className='Slider-arrow Slider-arrow--right'\n                            onClick={ (event) => this.goToSlide(lastIndex + 1, event) } /> : null \n                }\n            </div>\n        );\n    }\n    \n    render() {\n        const {\n            children,\n            showArrows,\n            showNav,\n        } = this.props;\n    \n        const {\n            index,\n            transition,\n        } = this.state;\n    \n    \n        const slidesStyles = {\n            width: `${ 100 * children.length }%`,\n            transform: `translateX(${ -1 * index * (100 / children.length) }%)`,\n        };\n        const slidesClasses = transition ? 'Slider-slides Slider-slides--transition' : 'Slider-slides';\n    \n        return (\n            <div className='Slider' ref='slider'>\n                { showArrows ? this.renderArrows() : null }\n                { showNav ? this.renderNav() : null }\n                <div\n                    className='Slider-inner'\n                    onTouchStart={ (event) => this.handleDragStart(event, true) }\n                    onTouchMove={ (event) => this.handleDragMove(event, true) }\n                    onTouchEnd={ () => this.handleDragEnd(true) }>\n                    <div\n                        className={ slidesClasses }\n                        style={ slidesStyles }>\n                        { children }\n                    </div>\n                </div>\n            </div>\n        );\n      }\n}","import React from 'react';\nimport './section.css'\nimport h2p from 'html2plaintext';\nimport Slider from '../slider';\n\nexport default class Section extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        // get tags\n        let tags =this.props.section.tags || [];\n        // set childs container\n        let childs = [];\n        // generate slider childs\n        this.props.section.media.forEach(m => childs.push(\n            /^jpeg|png|jpg|svg$/i.test(m.ext) ? \n            // image?\n            <div className=\"media\">\n                <img src={m.url}/>\n            </div> \n            : \n            // video?\n            <div className=\"media\">\n                <video src={m.url} controls={true}/>\n            </div>\n        ));\n        \n        return (\n            <div className=\"section\">\n                <div className=\"media\">\n                    <Slider loop={true} showArrows={this.props.section.media.length > 1} showNav={this.props.section.media.length > 1} selected={0}>{childs}</Slider>\n                </div>\n                <div className=\"title\">\n                    {this.props.section.title || \"\"}\n                </div>\n                <div className=\"description\">\n                    {h2p(this.props.section.description || \"\")}\n                </div>\n                <div className=\"tags\">\n                    { tags.length ? `#${tags.join(\" #\")}` : \"\" }\n                </div>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport './credit.css'\n\nexport default class Credit extends React.Component {\n\n    render(){\n        return (\n            <div className=\"credit\">\n                Powered by <a href=\"https://oneshop.cloud\" target=\"__blank\"><img src=\"https://assets.oneshop.cloud/150XAUTO/D161763C-3A14-4F46-A8C7-A9826CF7FD6A.png\"/></a>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport './reader.css';\n\nimport TopBar from '../../components/topBar';\nimport Section from '../../components/section';\nimport Credit from '../../components/credit';\n\nexport default class Reader extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            article : window.OS_ARTICLE || {}\n        }\n    }\n\n    renderArticle(){\n        return (\n            <div className=\"wrapper\">\n                {/* ----- Top Bar ----- */}\n                <TopBar shop={(this.state.article || {}).shop || {}}/>\n                {/* ----- Content ----- */}\n                <div className=\"content\">\n                    {((this.state.article || {}).sections || []).map((section, idx) => <Section section={section} key={`section_${idx}`}/>)}\n                </div>\n                {/* ----- Footer ----- */}\n                <Credit/>\n            </div>\n        );\n    }\n\n    renderNotFound(){\n        return (\n            <div className=\"wrapper\">\n                <h3>Oops! Something went wrong</h3>\n                <div>\n                    <pre>Error 404: Article not found.</pre>\n                </div>\n                <Credit/>\n            </div>\n        )\n    }\n\n    render(){\n        console.log(\"=====> \", this.state.article);\n        return (this.state.article || {}).id ? this.renderArticle() : this.renderNotFound();\n    }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Reader from './scenes/reader';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Reader />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}